
version: '3'

services:
  # PostgreSQL service
  db:
    image: "postgres:latest"
    container_name: "my-postgresql-container"
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=qazWSX
        - POSTGRES_DB=Test1
    volumes:
        - postgres_data:/var/lib/postgresql/data
    ports:
        - "5432:5432"  # PostgreSQL default port
    networks:
        - c_network
    
  redis:
    container_name: redis_c
    image: redis
    # restart: always
    expose:
      - "6379"
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning
    networks:
        - c_network

  # # Django service
  # web:
  #   build: .
  #   command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db

  # # Celery worker service
  # worker:
  #   build: .
  #   command: celery -A your_project_name worker --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db

  pgadmin:
    image: dpage/pgadmin4
    container_name: demo-pgadmin #you can change this
    depends_on:
        - db
    ports:
        - "5051:80"
    environment:
        PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
        PGADMIN_DEFAULT_PASSWORD: root
    networks:
        - c_network
  #   restart: always

#   rabbitmq:
#     image: rabbitmq:3-management-alpine
#     container_name: 'rabbitmq'
#     environment:
#         - RABBITMQ_DEFAULT_USER=guest
#         - RABBITMQ_DEFAULT_PASS=guest
#     ports:
#         - 5672:5672 # RabbitMQ default port
#         - 15672:15672 # RabbitMQ management plugin port
#     volumes:
#         - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
#         - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
#     networks:
#         - c_network
#     # depends_on:
#     #     - web
#     #     - worker

# networks:
#   my_network:
networks:
  c_network:
    driver: bridge

volumes:
  postgres_data:



# celery -A djangoCeleryApp worker -l info --pool=solo --purge